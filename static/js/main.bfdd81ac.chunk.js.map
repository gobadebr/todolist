{"version":3,"sources":["components/CreateTask.js","components/EditTask.js","components/Card.js","components/TodoList.js","App.js","index.js"],"names":["CreateTask","modal","toggle","save","useState","taskName","setTaskName","description","setDescription","handleChange","e","target","name","value","Modal","isOpen","ModalHeader","ModalBody","className","type","onChange","rows","ModalFooter","Button","color","onClick","taskObj","EditTask","updateTask","taskData","useEffect","Name","Description","preventDefault","Card","index","deleteTask","updateListArray","setModal","colors","primaryColor","secondaryColor","style","TodoList","taskList","setTaskList","arr","localStorage","getItem","obj","JSON","parse","tempList","splice","setItem","stringify","window","location","reload","map","push","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.bfdd81ac.chunk.js","sourcesContent":["import React,{useState} from 'react'\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\n\nfunction CreateTask({modal,toggle,save}) {\n    const [taskName,setTaskName] = useState('');\n    const [description,setDescription] = useState('');\n\n    const handleChange = (e)=>{\n        const {name,value} = e.target;\n\n        if (name === \"taskName\"){\n            setTaskName(value)\n        }\n        else{\n            setDescription(value)\n        }\n    }\n\n    const handleSave = (e)=>{\n        let taskObj={}\n        taskObj[\"Name\"] = taskName;\n        taskObj[\"Description\"] = description;\n        save(taskObj)\n    }\n    return (\n        <div>\n            \n            <Modal isOpen={modal} toggle={toggle} >\n                <ModalHeader toggle={toggle}>Create Task</ModalHeader>\n                <ModalBody>\n                    <form>\n                        <div className=\"form-group\">\n                            <label>Task Name</label>\n                            <input className=\"form-control\" type=\"text\"  value={taskName}  onChange={handleChange} name=\"taskName\"/>\n                        </div><br/>\n                        <div className=\"form-group\">\n                        <label>Description</label>\n                            <textarea className=\"form-control\" rows=\"5\" value={description} onChange={handleChange} name=\"description\" ></textarea>\n                        </div>\n\n                    </form>\n                </ModalBody>\n                <ModalFooter>\n                    <Button color=\"primary\" onClick={handleSave}>Create</Button>{' '}\n                    <Button color=\"secondary\" onClick={toggle}>Cancel</Button>\n                </ModalFooter>\n            </Modal>\n        </div>\n    )\n}\n\nexport default CreateTask;\n","import React,{useState , useEffect} from 'react'\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\n\nfunction EditTask({modal,toggle,updateTask,taskData}) {\n    const [taskName,setTaskName] = useState('');\n    const [description,setDescription] = useState('');\n\n    const handleChange = (e)=>{\n        const {name,value} = e.target;\n\n        if (name === \"taskName\"){\n            setTaskName(value)\n        }\n        else{\n            setDescription(value)\n        }\n    }\n    useEffect(() => {\n        setTaskName(taskData.Name)\n        setDescription(taskData.Description)\n    },[])\n\n    const handleUpdate = (e)=>{\n        e.preventDefault();\n        let taskData={}\n        taskData[\"Name\"] = taskName;\n        taskData[\"Description\"] = description;\n        updateTask(taskData)\n    }\n    return (\n        <div>\n            \n            <Modal isOpen={modal} toggle={toggle} >\n                <ModalHeader toggle={toggle}>Update Task</ModalHeader>\n                <ModalBody>\n                    <form>\n                        <div className=\"form-group\">\n                            <label>Task Name</label>\n                            <input className=\"form-control\" type=\"text\"  value={taskName}  onChange={handleChange} name=\"taskName\"/>\n                        </div><br/>\n                        <div className=\"form-group\">\n                        <label>Description</label>\n                            <textarea className=\"form-control\" rows=\"5\" value={description} onChange={handleChange} name=\"description\" ></textarea>\n                        </div>\n\n                    </form>\n                </ModalBody>\n                <ModalFooter>\n                    <Button color=\"primary\" onClick={handleUpdate}>Update</Button>\n                    <Button color=\"secondary\" onClick={toggle}>Cancel</Button>\n                </ModalFooter>\n            </Modal>\n        </div>\n    )\n}\n\nexport default EditTask;\n","import React,{useState} from 'react'\n\nimport EditTask from \"./EditTask\"\nfunction Card({taskData,index,deleteTask,updateListArray}) {\n\n    const [modal, setModal] = useState(false);\n\n    const colors = [\n        {\n            primaryColor : \"#5D93E1\",\n            secondaryColor : \"#ECF3FC\"\n        },\n        {\n            primaryColor : \"#F9D288\",\n            secondaryColor : \"#FEFAF1\"\n        },\n        {\n            primaryColor : \"#5DC250\",\n            secondaryColor : \"#F2FAF1\"\n        },\n        {\n            primaryColor : \"#F48687\",\n            secondaryColor : \"#FDF1F1\"\n        },\n        {\n            primaryColor : \"#B964F7\",\n            secondaryColor : \"#F3F0FD\"\n        }\n    ]\n\n    const toggle = () => {\n        setModal(!modal);\n    }\n\n    const updateTask = (taskData) => {\n        updateListArray(taskData, index)\n    }\n\n    const handleDelete = () => {\n        deleteTask(index);\n    }\n    \n    return (\n        <div className = \"card-wrapper mr-5\">\n            <div className = \"card-top\" style={{\"background-color\": colors[index%5].primaryColor}}></div>\n            <div className = \"task-holder\">\n                <span className = \"card-header titleheading\" style={{\"background-color\": colors[index%5].secondaryColor, \"border-radius\": \"10px\"}}>{taskData.Name}</span>\n                <p className = \"card-header1 descheading mt-3\">{taskData.Description}</p>\n\n                <div style={{\"position\": \"absolute\", \"right\" : \"20px\", \"bottom\" : \"20px\"}}>\n                    <i className = \"far fa-edit mr-3\" style={{\"color\" : colors[index%5].primaryColor, \"cursor\" : \"pointer\"}} onClick = {() => setModal(true)}>&nbsp;&nbsp;&nbsp;</i>\n                    <i className=\"fas fa-trash-alt\" style = {{\"color\" : colors[index%5].primaryColor, \"cursor\" : \"pointer\"}} onClick = {handleDelete}></i>\n                </div>\n            </div>\n            <EditTask modal = {modal} toggle = {toggle} updateTask = {updateTask} taskData = {taskData}/>\n        </div>\n    )\n}\n\nexport default Card\n","import React, {useState,useEffect} from 'react'\nimport CreateTask from \"./CreateTask\"\n\nimport Card from \"./Card\"\n\nfunction TodoList() {\n    const [modal, setModal] = useState(false);\n    const [taskList, setTaskList] = useState([]);\n\n    useEffect(() => {\n        let arr = localStorage.getItem(\"taskList\")\n        \n        if(arr){\n            let obj = JSON.parse(arr)\n            setTaskList(obj)\n        }\n    },[]);\n\n\n    const deleteTask =(index)=>{\n        let tempList=taskList\n        tempList.splice(index,1)\n        localStorage.setItem(\"taskList\",JSON.stringify(tempList))\n        setTaskList(tempList)\n        window.location.reload()\n    }\n\n    const updateListArray = (obj, index) => {\n        let tempList = taskList\n        tempList[index] = obj\n        localStorage.setItem(\"taskList\", JSON.stringify(tempList))\n        setTaskList(tempList)\n        window.location.reload()\n    }\n\n    const toggle = () => setModal(!modal);\n\n    const saveTask =(taskObj)=>{\n        let tempList = taskList\n        tempList.push(taskObj)\n        localStorage.setItem(\"taskList\",JSON.stringify(tempList))\n        setTaskList(tempList)\n        setModal(false)\n        window.location.reload()\n        \n    }\n    return ( \n        <>\n            <div className=\"header text-center\">\n                <h3>Todo List</h3>\n                <button className=\"btn btn-primary mt-1\" onClick={()=>setModal(true)}>Create Task</button>\n            </div>\n            <div className=\"task-container\">\n                {taskList.map((obj,index)=><Card taskData={obj} index={index} deleteTask={deleteTask}  updateListArray = {updateListArray}/>)}\n            </div>\n            <CreateTask toggle={toggle}  modal={modal} save={saveTask}/>\n        </>\n    )\n}\n\nexport default TodoList\n","import React from 'react'\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport TodoList from \"./components/TodoList\"\n\n\nfunction App() {\n  return (\n    <div>\n      <TodoList/>\n      \n    </div>\n  )\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n\n"],"sourceRoot":""}